ggplot(movies_newset, aes(audience_score, fill = best_pic_nom))+
geom_density(alpha = 0.3) #performance of best_pic_nom against audience score
ggplot(movies_newset, aes(audience_score, fill = best_dir_win))+
geom_density(alpha = 0.3) #performance of best_dir_win against audience score
ggplot(movies_newset, aes(audience_score, fill = top200_box))+
geom_density(alpha = 0.3) #performance of top200_box against audience score
ggplot(movies_newset, aes(audience_score, fill = title_type))+
geom_density(alpha = 0.3) #performance of title_type against audience score
ggplot(movies_newset, aes(audience_score, fill = genre))+
geom_density(alpha = 0.3) #performance of genre against audience score
ggplot(movies_newset, aes(audience_score, fill = mpaa_rating))+
geom_density(alpha = 0.3) #performance of mpaa_rating against audience score
ggplot(movies_newset, aes(audience_score, fill = critics_rating))+
geom_density(alpha = 0.3) #performance of critics rating against audience score
ggplot(movies_newset, aes(audience_score, fill = best_pic_nom))+
geom_density(alpha = 0.3) #performance of best_pic_nom against audience score
ggplot(movies_newset, aes(audience_score, fill = best_dir_win))+
geom_density(alpha = 0.3) #performance of best_dir_win against audience score
ggplot(movies_newset, aes(audience_score, fill = best_actor_win))+
geom_density(alpha = 0.3) #performance of best_actor_win against audience score
ggplot(movies_newset, aes(audience_score, fill = best_actress_win))+
geom_density(alpha = 0.3) #performance of best_actress_win against audience score
ggplot(movies_newset, aes(audience_score, fill = top200_box))+
geom_density(alpha = 0.3) #performance of top200_box against audience score
ggplot(movies_newset, aes(audience_score, fill = title_type))+
geom_density(alpha = 0.3) #performance of title_type against audience score
ggplot(movies_newset, aes(audience_score, fill = genre))+
geom_density(alpha = 0.2) #performance of genre against audience score
ggplot(movies_newset, aes(audience_score, fill = mpaa_rating))+
geom_density(alpha = 0.3) #performance of mpaa_rating against audience score
ggplot(movies_newset, aes(audience_score, fill = critics_rating))+
geom_density(alpha = 0.3) #performance of critics rating against audience score
ggplot(movies_newset, aes(audience_score, fill = best_pic_nom))+
geom_density(alpha = 0.3) #performance of best_pic_nom against audience score
ggplot(movies_newset, aes(audience_score, fill = best_dir_win))+
geom_density(alpha = 0.3) #performance of best_dir_win against audience score
ggplot(movies_newset, aes(audience_score, fill = best_actor_win))+
geom_density(alpha = 0.3) #performance of best_actor_win against audience score
ggplot(movies_newset, aes(audience_score, fill = best_actress_win))+
geom_density(alpha = 0.3) #performance of best_actress_win against audience score
ggplot(movies_newset, aes(audience_score, fill = top200_box))+
geom_density(alpha = 0.3) #performance of top200_box against audience score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm")
geom_jitter
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+geom_jitter()+
+   geom_smooth(se = FALSE, method = "lm")
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+geom_jitter()+
+   geom_smooth(se = FALSE, method = "lm")
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter(color = red)+
geom_smooth(se = FALSE, method = "lm")
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter(color = "red")+
geom_smooth(se = FALSE, method = "lm")
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm")
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = runtime, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of runtime vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = dvd_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of dvd_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = dvd_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of dvd_rel_year vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_month, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_month vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = dvd_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of dvd_rel_year vs audience_score
ggplot(movies_newset, aes(x = runtime, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_month vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = dvd_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of dvd_rel_year vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_month, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_month vs audience_score
ggplot(movies_newset, aes(x = imdb_rating, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_rating vs audience_score
ggplot(movies_newset, aes(x = critics_score, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of critics_score vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_year vs audience_score
ggplot(movies_newset, aes(x = imdb_num_votes, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of imdb_num_votes vs audience_score
ggplot(movies_newset, aes(x = dvd_rel_year, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of dvd_rel_year vs audience_score
ggplot(movies_newset, aes(x = thtr_rel_month, y = audience_score))+
geom_jitter()+
geom_smooth(se = FALSE, method = "lm") #plot of thtr_rel_month vs audience_score
movies_newset %>%
summarise(cor(audience_score, imdb_rating))
movies_newset %>%
summarise(cor(audience_score, critics_score))
movies_newset %>%
summarise(cor(audience_score, thtr_rel_year))
movies_newset %>%
summarise(cor(audience_score, imdb_num_votes))
movies_newset %>%
summarise(cor(audience_score, dvd_rel_year))
movies_newset %>%
summarise(cor(audience_score, thtr_rel_month))
ggpairs(movies_newset, columns = 4,6:10,11,13)
ggpairs(movies_newset, columns = c(4,6:10,11,13))
ggpairs(movies_newset, columns = c(4,6:9,11,13))
ggpairs(movies_newset, columns = c(4,6:9,11,13))
ggpairs(movies_newset, columns = c(4,6,7,8,9,10,12,14))
ggpairs(movies_newset, columns = c(4,6:10,12,14))
ggpairs(movies_newset, columns = c(4,6:10,12))
movies_newset %>%
summarise(cor(imdb_rating, critics_score))
movies_newset %>%
summarise(cor(thtr_rel_year, dvd_rel_year))
movies_newset %>%
summarise(cor(thtr_rel_year, thtr_rel_month))
movies_newset %>%
summarise(cor(dvd_rel_year, thtr_rel_month))
ggpairs(movies_newset, columns = c(4,6:10,12))
ggpairs(movies_newset, columns = c(4,6:10,12))
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
load("movies.Rdata")
str(movies) #lists out the variables used in the "movies" dataset
dim(movies) #gives the dimensions of the dataset
summary(movies) #gives the summary of every variable used in the dataset
min(movies$thtr_rel_year) #lists the smallest number in the variable "thtr_rel_year"
max(movies$thtr_rel_year) #lists the largest number in the variable "thtr_rel_year"
movies_newset %>
movies_newset %>%
summarise(cor(audience_score, mpaa_rating))
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + top200_box + imdb_rating + thtr_rel_year + imdb_num_votes)
audience_score_model <- lm(movies_newset, audience_score ~ title_type + genre + critics_rating + best_pic_nom + top200_box + imdb_rating + thtr_rel_year + imdb_num_votes)
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + top200_box + imdb_rating + thtr_rel_year + imdb_num_votes, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backwards", trace = FALSE)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + top200_box + imdb_rating + thtr_rel_year + imdb_num_votes + best_dir_win, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
aliens_pred <- data.frame(genre = "Action & Adventure", critics_rating = "Certified Fresh", imdb_rating = 8.4, thtr_rel_year = 1986)
predict(aliens_pred, best_model)
predict(best_model, aliens_pred)
robocop_2 <- data.frame(genre = "Action & Adventure", crtitics_rating = "Rotten", imdb_rating = 5.7, thtr_rel_year = 1990)
predict(best_model, robocop_2)
robocop_2 <- data.frame(genre = "Action & Adventure", critics_rating = "Rotten", imdb_rating = 5.7, thtr_rel_year = 1990)
predict(best_model, robocop_2)
predator <- data.frame(genre = "Action & Adventure", critics_rating = "Certified Fresh", imdb_rating = 7.8, thtr_rel_year = 1987)
predict(best_model, predator)
du <- data.frame(genre = "Other", critics_rating = "Certified Fresh", imdb_rating = 8.5, thtr_rel_year = 2012)
predict(best_model, du)
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
KFP3 <- data.frame(genre = "Animation", critics_rating = "Certified Fresh", imdb_rating = 7.1, thtr_rel_year = 2016)
predict(best_model, KFP3)
lala_land <- data.frame(genre = "Drama", critics_rating = "Certified Fresh", imdb_rating = 8, thtr_rel_year = 2016)
predict(best_model, lala_land)
audience_score_model <- lm(audience_score ~ title_type + genre + mpaa_rating +  critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
lala_land <- data.frame(genre = "Drama", critics_rating = "Certified Fresh", imdb_rating = 8, thtr_rel_year = 2016)
predict(best_model, lala_land)
best_model <- step(audience_score_model, direction = "forward", trace = FALSE)
lala_land <- data.frame(genre = "Drama", critics_rating = "Certified Fresh", imdb_rating = 8, thtr_rel_year = 2016)
predict(best_model, lala_land)
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
lala_land <- data.frame(genre = "Drama", critics_rating = "Certified Fresh", imdb_rating = 8, thtr_rel_year = 2016)
predict(best_model, lala_land)
audience_score_model <- lm(audience_score ~ title_type + genre + critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
criti
audience_score_model <- lm(audience_score ~ title_type + genre + runtime + critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
audience_score_model <- lm(audience_score ~ title_type + runtime +  genre + critics_rating + best_pic_nom + imdb_rating + imdb_num_votes + thtr_rel_year +  best_dir_win + top200_box, data = movies_newset)
summary(audience_score_model)
best_model <- step(audience_score_model, direction = "backward", trace = FALSE)
summary(best_model)
lala_land <- data.frame(genre = "Drama", critics_rating = "Certified Fresh", imdb_rating = 8, thtr_rel_year = 2016, runtime = 128)
predict(best_model, lala_land)
KFP3 <- data.frame(genre = "Animation", critics_rating = "Certified Fresh", imdb_rating = 7.1, thtr_rel_year = 2016, runtime = 95)
predict(best_model, KFP3)
ggplot(data = best_model, aes(x = runtime, y = .residuals))+
geom_point()+
geom_abline(h = 0)
ggplot(data = best_model, aes(x = runtime, y = best_model$residuals))+
geom_point()+
geom_abline(h = 0)
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_abline(h = 0)
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_abline(h = 0)
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point()+
geom_abline(h = 0)
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_hline(h = 0)
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed") +
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed") +
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = best_model, aes(x = .residuals))+
geom_histogram(binwidth = 25)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(binwidth = 25)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram()
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(binwidth = 100)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram()
ggplot(data = best_model, aes(x = .resid))+
geom_histogram()
qqnorm(best_model$residuals)
qqline(best_model$residuals)
plot(best_model$residuals ~ best_model$fitted.values)
plot(best_model$residuals ~ best_model$fitted.values, h=0)
ggplot(data = best_model, aes(x = .fitted, y = .resid))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = best_model, aes(x = .fitted, y = .resid))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Fitted Values")+
ylab("Residual Values")
plot(best_model$residuals)
plot(best_model$residuals)+
geom_hline(yintercept = 0, linetype = "dashed")
plot
ggplot(data = best_model, aes(x = .resid))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = best_model, aes(x = .resid))+
plot(best_model$residuals)
geom_hline(yintercept = 0, linetype = "dashed")
plot(best_model$residuals)
ggplot(data = best_model, aes(x = .fitted, y = .resid))+
geom_point(col = "red")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Predicted Value")+
ylab("Residual Values")
ggplot(data = best_model, aes(x = .fitted, y = .resid))+
geom_point(col = "brown")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Predicted Value")+
ylab("Residual Values")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "azure1")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "bisque3")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Runtime")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Runtime")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("imdb_rating")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("thtr_rel_year")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$runtime, y = best_model$residuals))+
geom_point(color = "orange")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("Runtime")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$imdb_rating, y = best_model$residuals))+
geom_point(color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("imdb_rating")+
ylab("Residuals")
ggplot(data = movies_newset, aes(x = movies_newset$thtr_rel_year, y = best_model$residuals))+
geom_point(color = "aquamarine4")+
geom_hline(yintercept = 0, linetype = "dashed")+
xlab("thtr_rel_year")+
ylab("Residuals")+
ggtitle("thtr_rel_year vs residuals")
ggplot(data = best_model, aes(x = .resid))+
geom_histogram()
qqnorm(best_model$residuals)
qqline(best_model$residuals)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(bin = 30)
qqnorm(best_model$residuals)
qqline(best_model$residuals)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(bins = 30)
qqnorm(best_model$residuals)
qqline(best_model$residuals)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(bins = 30, color = "blue")
qqnorm(best_model$residuals)
qqline(best_model$residuals)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(bins = 30, color = "white")
qqnorm(best_model$residuals)
qqline(best_model$residuals)
ggplot(data = best_model, aes(x = .resid))+
geom_histogram(bins = 30)
qqnorm(best_model$residuals)
qqline(best_model$residuals)
avengers_infinity_war <- data.frame(runtime = 149, genre = "Science Fiction & Fantasy", critics_ratin = "Certified Fresh", imdb_ratin = 8.5, thtr_rel_year = 2018)
predict(best_model, avengers_infinity_war)
avengers_infinity_war <- data.frame(runtime = 149, genre = "Science Fiction & Fantasy", critics_rating = "Certified Fresh", imdb_ratin = 8.5, thtr_rel_year = 2018)
predict(best_model, avengers_infinity_war)
avengers_infinity_war <- data.frame(runtime = 149, genre = "Science Fiction & Fantasy", critics_rating = "Certified Fresh", imdb_rating = 8.5, thtr_rel_year = 2018)
predict(best_model, avengers_infinity_war)
avengers_infinity_war <- data.frame(runtime = 149, genre = "Science Fiction & Fantasy", critics_rating = "Certified Fresh", imdb_rating = 8.5, thtr_rel_year = 2018)
predict(best_model, avengers_infinity_war)
predict(best_model, avengers_infinity_war, interval = "prediction", conf.level = 0.95)
the_usual_suspects <- data.frame(runtime = 106, genre = "Mystery & Suspense", critics_rating = "Certified Fresh", imdb_rating = 8.6, thtr_rel_year = 1995)
predict(best_model, the_usual_suspects)
predict(best_model, the_usual_suspects, interval = "prediction", conf.level = 0.95)
zodiac <- data.frame(runtime = 162, genre = "Mystery & Suspense", critics_rating = "Certified Fresh", imdb_rating = 7.7, thtr_rel_year = 2007)
predict(best_model, zodiac)
predict(best_model, zodiac, interval = "prediction", conf.level = 0.95)
avengers_infinity_war <- data.frame(runtime = 149, genre = "Science Fiction & Fantasy", critics_rating = "Certified Fresh", imdb_rating = 8.5, thtr_rel_year = 2018)
predict(best_model, avengers_infinity_war)
predict(best_model, avengers_infinity_war, interval = "prediction", conf.level = 0.95)
sleepy_hollow <- data.frame(runtime = 105, genre = "Horror", critics_rating = "Fresh", imdb_rating = 7.4, thtr_rel_year = 1999)
predict(best_model, sleepy_hollow)
never_back_down <- data.frame(runtime = 115, genre = "Other", critics_rating = "Rotten", imdb_rating = 6.6, thtr_rel_year = 2008)
predict(best_model, never_back_down)
predict(best_model, never_back_down, interval = "prediction", conf.level = 0.95)
never_say_never_again <- data.frame(runtime = 134, genre = "Mystery & Suspense", critics_rating = "Fresh", imdb_rating = 6.2, thtr_rel_year = 1983)
predict(best_model, never_say_never_again, interval = "prediction", conf.level = 0.95)
dr_no <- data.frame(runtime = 109, genre = "Mystery & Suspense", critics_rating = "Certified Fresh", imdb_rating = 7.3, thtr_rel_year = 1962)
predict(best_model, dr_no, interval = "prediction", conf.level = 0.95)
skyfall <- data.frame(runtime = 143, genre = "Mystery & Suspense", critics_rating = "Certified Fresh", imdb_rating = 7.8, thtr_rel_year = 2012)
predict(best_model, skyfall, interval = "prediction", conf.level = 0.95)
lald <- data.frame(runtime = 121, genre = "Mystery & Suspense", critics_rating = "Fresh", imdb_rating = 6.8, thtr_rel_year = 1973)
predict(best_model, lald, interval = "prediction", conf.level = 0.95)
live_and_let_die <- data.frame(runtime = 121, genre = "Mystery & Suspense", critics_rating = "Fresh", imdb_rating = 6.8, thtr_rel_year = 1973)
predict(best_model, live_and_let_die)
predict(best_model, live_and_let_die, interval = "prediction", conf.level = 0.95)
